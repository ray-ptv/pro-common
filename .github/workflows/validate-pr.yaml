name: validate pr

on:
  workflow_call:
    inputs:
      pr_template:
        required: true
        type: string

jobs:
  validate-pull-request:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install octokit
        run: npm install @octokit/core
      - name: Pull ticket from title
        id: values
        uses: actions/github-script@v6
        env:
          TITLE: ${{ github.event.pull_request.title }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let title = process.env.TITLE;
            const fs = require('fs');
            const pattern = /([^/]+\/)?(PRO-\d{4})(.*)/;
            const matchTitle = pattern.exec(title);
            
            const githubHeadRef = process.env.GITHUB_HEAD_REF;
            const githubRef = process.env.GITHUB_REF;
            const branchName = githubHeadRef || githubRef.replace('refs/heads/', '');
            const matchBranch = pattern.exec(branchName);
            
            if (matchTitle) {
              const ticket = matchTitle[2]; // This will contain "PRO-1234"
              let description = matchTitle[3]; // This will contain what comes after "PRO-1234"
              description = description.replace(/^[^a-zA-Z0-9]+/, '');
              console.log("PRO ticket:", ticket);
              console.log("PR description:", description);
              core.setOutput('ticket', ticket);
              core.setOutput('description', description);
            } else if (matchBranch) {
              const ticket = matchBranch[2];
              title = ticket.concat(" ", title);
              core.setOutput('ticket', ticket);
              core.setOutput('title', title);
            } else {
              console.log("Wrong format: PR title or branch name must contain PRO ticket number")
              process.exit(1);
            }
            
            core.setOutput('title', title);

      - name: Fetch PR
        id: pull_request
        uses: actions/github-script@v6
        env:
          TITLE: ${{ steps.values.outputs.title }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            import fetch from "node-fetch";
  
            const octokit = new Octokit({
            request: {
              fetch: fetch,
            },
            auth: process.env.GITHUB_TOKEN
            });
            console.log(process.env.TITLE);
            console.log(process.env.PR_NUMBER);
         
            await octokit.request(`PATCH /repos/${{ github.repository }}/pulls/${process.env.PR_NUMBER}`, {
            pull_number: process.env.PR_NUMBER,
            title: process.env.TITLE,
            body: process.env.BODY_TEMPLATE,
            headers: {
              'X-GitHub-Api-Version': '2022-11-28'
            }
            });
      - name: Render template
        id: template
        uses: chuhlomin/render-template@v1.7
        with:
          template: ${{ steps.pull_request.outputs.body }}
          vars: |
            ticket: "${{ steps.values.outputs.ticket }}"
            description: "${{ steps.values.outputs.description }}"
      - name: Update PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          TITLE="${{ steps.values.outputs.title }}"
          BODY_TEMPLATE="${{ steps.template.outputs.result }}"
          
          echo "PR_NUMBER: $PR_NUMBER"
          echo "TITLE: $TITLE"
          echo "BODY_TEMPLATE: $BODY_TEMPLATE"

          JSON_PAYLOAD=$(jq -n --arg title "$TITLE" --arg body "$BODY_TEMPLATE" '{ "title": $title, "body": $body }')
            
          curl -L \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}"


