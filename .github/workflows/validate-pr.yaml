name: validate pr

on:
  workflow_call:
    inputs:
      pr_template:
        required: true
        type: string

jobs:
  validate-pull-request:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Extract branch name
        shell: bash
        run: echo ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" > branch
        id: extract-branch
      - name: Pull ticket from title
        id: values
        uses: actions/github-script@v6
        env:
          TITLE: ${{ github.event.pull_request.title }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let title = process.env.TITLE;
            const fs = require('fs');
            const pattern = /([^/]+\/)?(PRO-\d{4})(.*)/;
            const matchTitle = pattern.exec(title);
            const matchBranch = pattern.exec(branch);
            
            const branch = fs.readFileSync('branch', 'utf-8');
            console.log('branch:', branch);
            
            if (matchTitle) {
              const ticket = matchTitle[2]; // This will contain "PRO-1234"
              let description = matchTitle[3]; // This will contain what comes after "PRO-1234"
              description = description.replace(/^[^a-zA-Z0-9]+/, '');
              console.log("PRO ticket:", ticket);
              console.log("PR description:", description);
              fs.writeFileSync('ticket', ticket);
              fs.writeFileSync('description', description);
            } else if (matchBranch) {
              const ticket = matchBranch[2];
              title = ticket.concat(" ", title);
              fs.writeFileSync('ticket', ticket);
              fs.writeFileSync('title', title);
            }
            
            fs.writeFileSync('title', title);

      - name: Extract variables
        id: extract-variables
        run: |
          ticket=$(cat ticket)
          title=$(cat title)
          description=$(cat description)
          echo "ticket=${ticket}" >> $GITHUB_OUTPUT
          echo "title=${title}" >> $GITHUB_OUTPUT
          echo "description=${description}" >> $GITHUB_OUTPUT
      - name: Render template
        id: template
        uses: chuhlomin/render-template@v1.7
        with:
          template: ${{ inputs.pr_template }}
          vars: |
            ticket: "${{ steps.extract-variables.outputs.ticket }}"
            description: "${{ steps.extract-variables.outputs.description }}"
      - name: Update PR body
        uses: tzkhan/pr-update-action@v2
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          title-template: "${{ steps.extract-variables.outputs.title }}"
          body-template: "${{ steps.template.outputs.result }}"
          body-update-action: 'suffix'

