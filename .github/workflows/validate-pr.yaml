name: validate pr

on:
  workflow_call:
    inputs:
      pr_template:
        required: true
        type: string

jobs:
  validate-pull-request:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install octokit
        run: npm install @octokit/core
      - name: Pull ticket from title
        id: values
        uses: actions/github-script@v6
        env:
          TITLE: ${{ github.event.pull_request.title }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let title = process.env.TITLE;
            let ticket = "";
            let description = "";
            const fs = require('fs');
            const pattern = /([^/]+\/)?(PRO-\d{4})(.*)/;
            const matchTitle = pattern.exec(title);
            
            const branchName = process.env.GITHUB_HEAD_REF || process.env.GITHUB_REF.replace('refs/heads/', '');
            const matchBranch = pattern.exec(branchName);
            
            if (matchTitle) {
              ticket = matchTitle[2]; // This will contain "PRO-1234"
              description = matchTitle[3]; // This will contain what comes after "PRO-1234"             
            } else if (matchBranch) {
              ticket = matchBranch[2]; // Get Jira ticket number from branch name
              const matchDescription = title.match(/\d{4}(?:(.*))/);
              if (matchDescription && matchDescription[1]) {
                description = matchDescription[1]; // Get description after the ticket number
                title = ticket + description
              }
            } else {
              console.log("Wrong format: PR title or branch name must contain PRO ticket number")
              process.exit(1);
            }
            
            description = description.replace(/^[^a-zA-Z0-9]+/, ''); // Remove nonalphanumeric values before description 
            core.setOutput('title', title);
            core.setOutput('ticket', ticket);
            core.setOutput('description', description);

      - name: Fetch PR
        id: pull_request
        uses: actions/github-script@v6
        env:
          TITLE: ${{ steps.values.outputs.title }}
          DESCRIPTION: ${{ steps.values.outputs.description }}
          TICKET: ${{ steps.values.outputs.ticket }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { Octokit } = require("@octokit/core");
  
            const octokit = new Octokit({
            request: {
              fetch: fetch,
            },
            auth: process.env.GITHUB_TOKEN,
            });
            console.log(process.env.TITLE);
            console.log(process.env.TICKET);
            console.log(process.env.PR_NUMBER);
            console.log(process.env.DESCRIPTION);
              
            response = await octokit.request(`GET /repos/${{ github.repository }}/pulls/${process.env.PR_NUMBER}`, {
              headers: {
                'X-GitHub-Api-Version': '2022-11-28'
              }
            });
            
            resBody = response.data.body;
            
            const newBody = resBody
                              .replace(/{{ \.ticket }}/g, process.env.TICKET)
                              .replace(/{{ \.description }}/g, process.env.DESCRIPTION);
            
            const res = await octokit.request(`PATCH /repos/${{ github.repository }}/pulls/${process.env.PR_NUMBER}`, {
              title: process.env.TITLE,
              body: newBody,
              headers: {
                'X-GitHub-Api-Version': '2022-11-28'
              }
            })


